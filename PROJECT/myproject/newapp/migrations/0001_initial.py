# Generated by Django 5.1.6 on 2025-03-26 16:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddOrgan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'admin'), ('donor', 'donor'), ('recipient', 'recipient'), ('hospital', 'hospital')], default='admin', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeceasedDonation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability_status', models.CharField(choices=[('Available', 'Available'), ('Transplanted', 'Transplanted'), ('Reserved', 'Reserved')], default='Available', max_length=20)),
                ('diabetes', models.BooleanField(default=False)),
                ('hypertension', models.BooleanField(default=False)),
                ('heart_disease', models.BooleanField(default=False)),
                ('kidney_disease', models.BooleanField(default=False)),
                ('liver_disease', models.BooleanField(default=False)),
                ('cancer_history', models.BooleanField(default=False)),
                ('hiv_aids', models.BooleanField(default=False)),
                ('hepatitis', models.BooleanField(default=False)),
                ('smoking_history', models.BooleanField(default=False)),
                ('alcohol_history', models.BooleanField(default=False)),
                ('major_surgeries', models.BooleanField(default=False)),
                ('organ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deceased_donations', to='newapp.addorgan')),
            ],
        ),
        migrations.CreateModel(
            name='DeceasedDonationFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='deceased_donation_files/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('donation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='newapp.deceaseddonation')),
            ],
        ),
        migrations.CreateModel(
            name='DonorDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3)),
                ('contact', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField()),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='donor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='deceaseddonation',
            name='donor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deceased_donations', to='newapp.donordetails'),
        ),
        migrations.CreateModel(
            name='HospitalDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('contact_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('total_beds', models.IntegerField()),
                ('available_beds', models.IntegerField()),
                ('emergency_facilities', models.TextField()),
                ('country', models.CharField(default='Unknown', max_length=100)),
                ('state', models.CharField(default='Unknown', max_length=100)),
                ('city', models.CharField(default='Unknown', max_length=100)),
                ('pincode', models.CharField(default='000000', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_detail', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='donordetails',
            name='hospital',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='newapp.hospitaldetail'),
        ),
        migrations.CreateModel(
            name='LivingOrganDonation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability_status', models.CharField(choices=[('Available', 'Available'), ('Transplanted', 'Transplanted'), ('Reserved', 'Reserved')], default='Available', max_length=20)),
                ('diabetes', models.BooleanField(default=False)),
                ('blood_pressure', models.BooleanField(default=False)),
                ('heart_disease', models.BooleanField(default=False)),
                ('kidney_disease', models.BooleanField(default=False)),
                ('liver_disease', models.BooleanField(default=False)),
                ('lung_disease', models.BooleanField(default=False)),
                ('hiv_aids', models.BooleanField(default=False)),
                ('hepatitis', models.BooleanField(default=False)),
                ('obesity', models.BooleanField(default=False)),
                ('cancer_history', models.BooleanField(default=False)),
                ('smoking_history', models.BooleanField(default=False)),
                ('alcohol_history', models.BooleanField(default=False)),
                ('any_surgery', models.BooleanField(default=False)),
                ('skin_damage', models.BooleanField(default=False)),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='living_donations', to='newapp.donordetails')),
                ('organ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newapp.addorgan')),
            ],
        ),
        migrations.CreateModel(
            name='LivingDonationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='living_donation_docs/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('donation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='newapp.livingorgandonation')),
            ],
        ),
        migrations.CreateModel(
            name='Recipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('dob', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3)),
                ('contact', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('matching_status', models.CharField(choices=[('Pending', 'Pending'), ('Matched', 'Matched'), ('Transplanted', 'Transplanted'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newapp.hospitaldetail')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipient_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organ_type', models.CharField(choices=[('Heart', 'Heart'), ('Kidney', 'Kidney'), ('Liver', 'Liver'), ('Lungs', 'Lungs'), ('Pancreas', 'Pancreas'), ('Intestine', 'Intestine')], max_length=50)),
                ('hospital_source', models.CharField(max_length=100)),
                ('hospital_destination', models.CharField(max_length=100)),
                ('transport_status', models.CharField(choices=[('Pending', 'Pending'), ('In Transit', 'In Transit'), ('Delivered', 'Delivered'), ('Delayed', 'Delayed')], default='Pending', max_length=20)),
                ('dispatch_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('estimated_arrival', models.DateTimeField(blank=True, null=True)),
                ('current_location', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_id', models.CharField(max_length=20, unique=True)),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newapp.donordetails')),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='newapp.recipient')),
            ],
        ),
        migrations.CreateModel(
            name='RecipientOrganNeeded',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgency_level', models.CharField(choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High'), ('Critical', 'Critical')], default='Low', max_length=10)),
                ('diabetes', models.BooleanField(default=False)),
                ('blood_pressure', models.BooleanField(default=False)),
                ('heart_disease', models.BooleanField(default=False)),
                ('kidney_disease', models.BooleanField(default=False)),
                ('liver_disease', models.BooleanField(default=False)),
                ('lung_disease', models.BooleanField(default=False)),
                ('hiv_aids', models.BooleanField(default=False)),
                ('hepatitis', models.BooleanField(default=False)),
                ('cancer_history', models.BooleanField(default=False)),
                ('autoimmune_disease', models.BooleanField(default=False)),
                ('neurological_disorder', models.BooleanField(default=False)),
                ('blood_disorder', models.BooleanField(default=False)),
                ('obesity', models.BooleanField(default=False)),
                ('smoking_history', models.BooleanField(default=False)),
                ('alcohol_history', models.BooleanField(default=False)),
                ('previous_transplant', models.BooleanField(default=False)),
                ('requested_date', models.DateTimeField(auto_now_add=True)),
                ('organ_neededrequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organs_needed', to='newapp.addorgan')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organs_needed', to='newapp.recipient')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='medical_docs/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('organ_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='newapp.recipientorganneeded')),
            ],
        ),
        migrations.CreateModel(
            name='TransplantMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=20)),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newapp.donordetails')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newapp.recipient')),
            ],
        ),
        migrations.CreateModel(
            name='TransplantMatchRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donor_object_id', models.PositiveIntegerField()),
                ('organ', models.CharField(max_length=100)),
                ('match_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=20)),
                ('donor_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newapp.recipientorganneeded')),
            ],
        ),
    ]
